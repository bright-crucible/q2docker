diff --git a/game/g_phys.c b/game/g_phys.c
index 4c45eea..f013e9b 100644
--- a/game/g_phys.c
+++ b/game/g_phys.c
@@ -941,6 +941,7 @@ void G_RunEntity (edict_t *ent)
 	case MOVETYPE_STOP:
 		SV_Physics_Pusher (ent);
 		break;
+    case MOVETYPE_WALK:
 	case MOVETYPE_NONE:
 		SV_Physics_None (ent);
 		break;
diff --git a/qcommon/crypt.h b/qcommon/crypt.h
index 622f4bc..4988050 100644
--- a/qcommon/crypt.h
+++ b/qcommon/crypt.h
@@ -32,7 +32,7 @@
 /***********************************************************************
  * Return the next byte in the pseudo-random sequence
  */
-static int decrypt_byte(unsigned long* pkeys, const unsigned long* pcrc_32_tab)
+static int decrypt_byte(unsigned long* pkeys, const z_crc_t* pcrc_32_tab)
 {
     unsigned temp;  /* POTENTIAL BUG:  temp*(temp^1) may overflow in an
                      * unpredictable manner on 16-bit systems; not a problem
@@ -45,7 +45,7 @@ static int decrypt_byte(unsigned long* pkeys, const unsigned long* pcrc_32_tab)
 /***********************************************************************
  * Update the encryption keys with the next byte of plain text
  */
-static int update_keys(unsigned long* pkeys,const unsigned long* pcrc_32_tab,int c)
+static int update_keys(unsigned long* pkeys,const z_crc_t* pcrc_32_tab,int c)
 {
     (*(pkeys+0)) = CRC32((*(pkeys+0)), c);
     (*(pkeys+1)) += (*(pkeys+0)) & 0xff;
@@ -62,7 +62,7 @@ static int update_keys(unsigned long* pkeys,const unsigned long* pcrc_32_tab,int
  * Initialize the encryption keys and the random header according to
  * the given password.
  */
-static void init_keys(const char* passwd,unsigned long* pkeys,const unsigned long* pcrc_32_tab)
+static void init_keys(const char* passwd,unsigned long* pkeys,const z_crc_t* pcrc_32_tab)
 {
     *(pkeys+0) = 305419896L;
     *(pkeys+1) = 591751049L;
@@ -92,7 +92,7 @@ static int crypthead(passwd, buf, bufSize, pkeys, pcrc_32_tab, crcForCrypting)
     unsigned char *buf;         /* where to write header */
     int bufSize;
     unsigned long* pkeys;
-    const unsigned long* pcrc_32_tab;
+    const z_crc_t* pcrc_32_tab;
     unsigned long crcForCrypting;
 {
     int n;                       /* index in random header */
diff --git a/qcommon/unzip.c b/qcommon/unzip.c
index d89f2e8..11472c0 100644
--- a/qcommon/unzip.c
+++ b/qcommon/unzip.c
@@ -153,7 +153,7 @@ typedef struct
     int encrypted;
 #    ifndef NOUNCRYPT
     unsigned long keys[3];     /* keys defining the pseudo-random sequence */
-    const unsigned long* pcrc_32_tab;
+    const z_crc_t* pcrc_32_tab;
 #    endif
 } unz_s;
 
diff --git a/server/sv_game.c b/server/sv_game.c
index 8871f02..d6ec30f 100644
--- a/server/sv_game.c
+++ b/server/sv_game.c
@@ -301,7 +301,7 @@ void EXPORT PF_setmodel (edict_t *ent, const char *name)
 
 }
 
-__inline char *SV_FixPlayerSkin (char *val, char *player_name)
+char *SV_FixPlayerSkin (char *val, char *player_name)
 {
 	static char	fixed_skin[MAX_QPATH];
 
